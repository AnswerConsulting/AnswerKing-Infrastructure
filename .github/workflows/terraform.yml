name: "Check Terraform"

env:
  terraform_version: "1.3.7"

on:
  push:
    branches: main
  pull_request:
    branches: main

jobs:
  determine-modules:
    name: "Determine Terraform Modules"
    runs-on: ubuntu-latest
    outputs:
      modules: ${{ steps.output-var.outputs.modules }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Pass to Var
        id: output-var
        env:
          ECHO_OUTPUT: ${{ steps.get-json.outputs.value }}
        run: |
          JQ_OUTPUT=$(find modules/ -mindepth 2 -type d  |  jq -R -s -c 'split("\n")[:-1]')
          echo "modules=$JQ_OUTPUT" >> $GITHUB_OUTPUT

  terraform-check:
    name: "Check Terraform"
    runs-on: ubuntu-latest
    needs: determine-modules
    strategy:
      matrix:
        module: ${{ fromJSON(needs.determine-modules.outputs.modules) }}
    defaults:
      run:
        working-directory: "${{ matrix.module }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.terraform_version }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Security
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          soft_fail: true
          working_directory: "${{ matrix.module }}"

  terraform-docs:
    name: "Update Terraform Docs"
    runs-on: ubuntu-latest
    needs: terraform-check
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Update README files
        uses: terraform-docs/gh-actions@v1.0.0
        with:
          find-dir: "modules"
          config-file: "${{ github.workspace }}/.terraform-docs.yml"
          output-method: inject
          git-push: "true"

  dependabot:
    name: Update Dependabot Entries
    runs-on: ubuntu-latest
    needs:
      - determine-modules
      - terraform-docs # to avoid race condition with both committing
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Update dependabot.yml
        env:
          MODULES: ${{ needs.determine-modules.outputs.modules }}
        run: |
          cp .github/dependabot-base.yml .github/dependabot.yml
          sed -i '1i # This file is auto-generated from dependabot-base.yml' .github/dependabot.yml

          jq -r '.[]' <<< "$MODULES" | while read MODULE; do
            cat <<EOF >> .github/dependabot.yml
            - package-ecosystem: terraform
              directory: /$MODULE
              schedule:
                interval: daily
              ignore:
                - dependency-name: "*"
                  update-types:
                    - "version-update:semver-patch"
                    - "version-update:semver-minor"
          EOF
          done

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Update dependabot terraform entries
          commit_author: "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
          file_pattern: .github/dependabot.yml
          skip_checkout: true

